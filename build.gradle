plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
	id 'org.graalvm.buildtools.native' version '0.9.23'
	id 'com.gorylenko.gradle-git-properties' version '2.4.1'
}

group = 'net.binarypaper'
version = '0.1'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

def gitHash = { ->
    def gitProcess = 'git rev-parse --short HEAD'.execute()
    gitProcess.waitFor()
    return gitProcess.text.trim()
}

springBoot {
	buildInfo {
		properties {
			version = "${project.version}.${gitHash}"
			additional = [
				"description": "Example Spring Boot project with native GraalVM image build and Git versioning info in application.",
				"developer.name": "William Gadney",
				"developer.email": "gadnex@gmail.com",
				"license.name": "APACHE LICENSE, VERSION 2.0",
				"license.url" : "https://www.apache.org/licenses/LICENSE-2.0"
			]
		}
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootBuildImage') {
	imageName = "docker.io/library/${project.name}:${project.version}.${gitHash}"
	docker {
		host.set('unix:///mnt/wsl/shared-docker/docker.sock')
		bindHostToBuilder.set(true)
	}
}